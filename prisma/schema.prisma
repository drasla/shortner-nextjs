// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/libraries/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// --- MODELS ---

model LoginAttempt {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())

  email     String
  ipAddress String
  userAgent String?
  success   Boolean

  @@map("login_attemps")
}

model PasswordResetToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  expiresAt DateTime

  token  String  @unique
  email  String
  userId String  @db.ObjectId
  used   Boolean @default(false)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("password_reset_token")
}

model Session {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  expiresAt DateTime
  token     String   @unique
  userId    String   @db.ObjectId
  ipAddress String?
  userAgent String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  hashedId       String   @unique
  email          String?  @unique
  salt           String
  hashedPassword String?
  isAdmin        Boolean  @default(false)
  isAnonymous    Boolean  @default(true)
  isActive       Boolean  @default(true)

  sessions            Session[]
  passwordResetTokens PasswordResetToken[]

  @@map("users")
}

